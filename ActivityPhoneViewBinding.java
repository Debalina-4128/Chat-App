// Generated by view binder compiler. Do not edit!
package com.example.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPhoneViewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bnext;

  @NonNull
  public final ConstraintLayout main;

  @NonNull
  public final EditText name;

  @NonNull
  public final TextView textView3;

  @NonNull
  public final TextView tvVerification;

  private ActivityPhoneViewBinding(@NonNull ConstraintLayout rootView, @NonNull Button bnext,
      @NonNull ConstraintLayout main, @NonNull EditText name, @NonNull TextView textView3,
      @NonNull TextView tvVerification) {
    this.rootView = rootView;
    this.bnext = bnext;
    this.main = main;
    this.name = name;
    this.textView3 = textView3;
    this.tvVerification = tvVerification;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPhoneViewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPhoneViewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_phone_view, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPhoneViewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bnext;
      Button bnext = ViewBindings.findChildViewById(rootView, id);
      if (bnext == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      id = R.id.name;
      EditText name = ViewBindings.findChildViewById(rootView, id);
      if (name == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      id = R.id.tvVerification;
      TextView tvVerification = ViewBindings.findChildViewById(rootView, id);
      if (tvVerification == null) {
        break missingId;
      }

      return new ActivityPhoneViewBinding((ConstraintLayout) rootView, bnext, main, name, textView3,
          tvVerification);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
